plugins {
    id("org.springframework.boot") version "2.6.7"
    id("io.spring.dependency-management") version "1.0.11.RELEASE"
    id('org.jetbrains.kotlin.jvm') version '1.6.21'
    id('org.jetbrains.kotlin.plugin.spring') version '1.6.21'
    id('org.jetbrains.kotlin.plugin.jpa')  version "1.6.21"
}

group = "de.reservation-bear"
version = "0.0.1-SNAPSHOT"
java.sourceCompatibility = JavaVersion.VERSION_17

repositories {
    mavenCentral()
}
//Only insert the commented out dependencies if you know exactly what you are doing
dependencies {
    //implementation("org.springframework.boot:spring-boot-starter-data-jpa")
    implementation 'org.springframework.boot:spring-boot-starter-web'
    //implementation("org.springframework.boot:spring-boot-starter-security")
    implementation("com.fasterxml.jackson.module:jackson-module-kotlin")
    developmentOnly("org.springframework.boot:spring-boot-devtools")
    implementation("org.jetbrains.kotlin:kotlin-reflect")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    runtimeOnly("org.mariadb.jdbc:mariadb-java-client")
    testImplementation("org.springframework.boot:spring-boot-starter-test")
    //testImplementation("org.springframework.security:spring-security-test")
    compileOnly("org.projectlombok:lombok")
    annotationProcessor("org.projectlombok:lombok")
}

test {
    defaultCharacterEncoding = 'UTF-8'
    useJUnitPlatform()
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "17"
    }
}
