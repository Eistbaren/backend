plugins {
    id("org.springframework.boot") version "2.6.7"
    id("io.spring.dependency-management") version "1.0.11.RELEASE"
    id("org.jetbrains.kotlin.jvm") version "1.6.21"
    id("org.jetbrains.kotlin.plugin.spring") version "1.6.21"
    id("org.jetbrains.kotlin.plugin.jpa") version "1.6.21"
    id("com.github.node-gradle.node") version "3.3.0"
}

group = "de.reservation-bear"
version = "0.0.1-SNAPSHOT"
java.sourceCompatibility = JavaVersion.VERSION_17

repositories {
    mavenCentral()
}
//Only insert the commented out dependencies if you know exactly what you are doing
dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation("com.fasterxml.jackson.module:jackson-module-kotlin")
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    developmentOnly("org.springframework.boot:spring-boot-devtools")
    implementation("org.jetbrains.kotlin:kotlin-reflect")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    runtimeOnly("com.h2database:h2") // version  1.4.200
    testImplementation("org.springframework.boot:spring-boot-starter-test")
    compileOnly("org.projectlombok:lombok")
    annotationProcessor("org.projectlombok:lombok")
    //SPRING Mail Dependencies
    implementation 'org.springframework.boot:spring-boot-starter-mail:2.6.4'
    //implementation("org.springframework.boot:spring-boot-starter-security")
    // testImplementation("org.springframework.security:spring-security-test")
    //implementation("org.springframework.boot:spring-boot-starter-data-jpa")
    implementation 'org.awaitility:awaitility:3.1.2'
}

test {
    defaultCharacterEncoding = 'UTF-8'
    useJUnitPlatform()
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "17"
    }
}

node {
    download = true
    version = '16.15.1'
    npmVersion = '8.12.1'
    nodeProjectDir = file("client")
}

task submodulesUpdate(type: Exec) {
    description 'Updates (and inits) git submodules'
    commandLine 'git', 'submodule', 'update', '--init', '--recursive'
    group 'Build Setup'
}

npmInstall.dependsOn submodulesUpdate

task copyReactBuildFiles {
    description "Copies the build files from react to the desired location"
    dependsOn npm_run_build
    copy {
        project.build
        from "client/build"
        into "src/main/resources/static/dist"
    }
    group "npm"
}

processResources.dependsOn copyReactBuildFiles

clean.delete << file("client/node_modules")
clean.delete << file("src/main/resources/static/dist")
